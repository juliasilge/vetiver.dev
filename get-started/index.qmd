---
title: "Getting Started"
format:
  html:
    toc: true
---

The vetiver framework for MLOps tasks is built for data science teams using R and/or Python, with a native, fluent experience for both.
It is built to be extensible, with methods that can support many kinds of models.

## Installation

::: {.panel-tabset group="language"}
## R

You can use vetiver with:

-   a [tidymodels](https://www.tidymodels.org/) workflow
-   [caret](https://topepo.github.io/caret/)
-   [mlr3](https://mlr3.mlr-org.com/)
-   [XGBoost](https://xgboost.readthedocs.io/en/latest/R-package/)
-   [ranger](https://cran.r-project.org/package=ranger)
-   [`lm()`](https://stat.ethz.ch/R-manual/R-patched/library/stats/html/lm.html) and [`glm()`](https://stat.ethz.ch/R-manual/R-patched/library/stats/html/glm.html)

You can install the released version of vetiver from [CRAN](https://cran.r-project.org/package=vetiver):

```{r}
#| eval: false
install.packages("vetiver")
```

And the development version from [GitHub](https://github.com/rstudio/vetiver-r) with:

```{r}
#| eval: false
# install.packages("devtools")
devtools::install_github("tidymodels/vetiver-r")
```

## Python

You can use vetiver with:

-   [scikit-learn](https://scikit-learn.org/)
-   [PyTorch](https://pytorch.org/)

You can install the released version of vetiver from [PyPI](https://pypi.org/project/vetiver/):

```{python}
#| eval: false
python -m pip install vetiver
```

And the development version from [GitHub](https://github.com/rstudio/vetiver-python) with:

```{python}
#| eval: false
python -m pip install git+https://github.com/rstudio/vetiver-python
```
:::

## Train a model

For this example, let's work with data on fuel efficiency for cars to predict miles per gallon.

::: {.panel-tabset group="language"}
## R

Let's consider one kind of model supported by vetiver, a [tidymodels](https://www.tidymodels.org/) workflow that encompasses both feature engineering and model estimation.

```{r}
#| message: false
library(tidymodels)

car_mod <-
    workflow(mpg ~ ., linear_reg()) %>%
    fit(mtcars)
```

## Python

Let's consider one kind of model supported by vetiver, a [scikit-learn](https://scikit-learn.org/) linear model.

```{python}
from vetiver.data import mtcars
from sklearn import linear_model

car_mod = linear_model.LinearRegression().fit(mtcars.drop(columns="mpg"), mtcars["mpg"])
```
:::

This `car_mod` object is a fitted model, with model parameters estimated using `mtcars`.

## Create a vetiver model

We can create a `vetiver_model()` in R or `VetiverModel()` in Python from the trained model; a vetiver model object collects the information needed to store, version, and deploy a trained model.

::: {.panel-tabset group="language"}
## R

```{r}
#| message: false
library(vetiver)
v <- vetiver_model(car_mod, "cars_mpg")
v
```

## Python

```{python}
from vetiver import VetiverModel
v = VetiverModel(car_mod, model_name = "cars_mpg", 
                 save_ptype = True, ptype_data = mtcars)
v.description
```
:::

Think of this vetiver model as a deployable model object.
